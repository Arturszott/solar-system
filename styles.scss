@import 'variables';

// ##################################################################
// ####################### GENERAL STYLES ###########################
// ##################################################################

* {
	box-sizing: border-box;
}

html,
body {
	margin: 0;
	height: 100vh;
	overflow: hidden;
}

.space {
	width: 100%;
	height: 100%;
	background: radial-gradient(circle, $space-color-light 0%, $space-color-dark 37%, black 85%);
}

.solar-system {
	position: absolute;
	width: 100%;
	height: 100%;
	transform: scale(0.5);
}

.sun,
.planet,
.moon,
.orbit {
	border-radius: 50%;
}

// ##################################################################
// ######################### ORBITS #################################
// ##################################################################

.orbit {
	position: absolute;
	top: 50%;
	left: 50%;
	border: solid 2px rgba(#fff, 0.2);
}

$orbits: (
	'mercury': (
		orbitSize: $orbit-mercury-size,
		margin: -$orbit-mercury-size / 2,
		animationDuration: $orbital-period-mercury
	),
	'venus': (
		orbitSize: $orbit-venus-size,
		margin: -$orbit-venus-size / 2,
		animationDuration: $orbital-period-venus
	),
	'earth': (
		orbitSize: $orbit-earth-size,
		margin: -$orbit-earth-size / 2,
		animationDuration: $orbital-period-earth
	),
	'moon': (
		orbitSize: $orbit-moon-size,
		margin: -$orbit-moon-size / 2,
		animationDuration: $orbital-period-moon
	),
	'mars': (
		orbitSize: $orbit-mars-size,
		margin: -$orbit-mars-size / 2,
		animationDuration: $orbital-period-mars
	),
	'jupiter': (
		orbitSize: $orbit-jupiter-size,
		margin: -$orbit-jupiter-size / 2,
		animationDuration: $orbital-period-jupiter
	),
	'saturn': (
		orbitSize: $orbit-saturn-size,
		margin: -$orbit-saturn-size / 2,
		animationDuration: $orbital-period-saturn
	),
	'uranus': (
		orbitSize: $orbit-uranus-size,
		margin: -$orbit-uranus-size / 2,
		animationDuration: $orbital-period-uranus
	),
	'neptune': (
		orbitSize: $orbit-neptune-size,
		margin: -$orbit-neptune-size / 2,
		animationDuration: $orbital-period-neptune
	)
);

@each $name, $orbit in $orbits {
	.orbit--#{$name} {
		width: map-get($orbit, orbitSize);
		height: map-get($orbit, orbitSize);
		margin-top: map-get($orbit, margin);
		margin-left: map-get($orbit, margin);
		animation-duration: map-get($orbit, animationDuration);
	}
}

// ##################################################################
// ############################ SUN #################################
// ##################################################################

.sun {
	position: absolute;
	top: 50%;
	left: 50%;
	width: $sun-size;
	height: $sun-size;
	background-color: $sun-color;
	box-shadow: inset $sun-shadow-size -#{$sun-shadow-size} 0px 0px $sun-shadow;
	transform: translate(-50%, -50%);
}

// ##################################################################
// #################### PLANETS AND MOONS ###########################
// ##################################################################

.planet {
	position: relative;
	left: 50%;
	transform: translate(-50%, -50%);
}

$planets: (
	'mercury': (
		planetSize: $mercury-size,
		backgroundColor: $mercury-color,
		shadowColor: $mercury-shadow
	),
	'venus': (
		planetSize: $venus-size,
		backgroundColor: $venus-color,
		shadowColor: $venus-shadow
	),
	'earth': (
		planetSize: $earth-size,
		backgroundColor: $earth-color,
		shadowColor: $earth-shadow
	),
	'mars': (
		planetSize: $mars-size,
		backgroundColor: $mars-color,
		shadowColor: $mars-shadow
	),
	'jupiter': (
		planetSize: $jupiter-size,
		backgroundColor: $jupiter-color,
		shadowColor: $jupiter-shadow
	),
	'saturn': (
		planetSize: $saturn-size,
		backgroundColor: $saturn-color,
		shadowColor: $saturn-shadow
	),
	'uranus': (
		planetSize: $uranus-size,
		backgroundColor: $uranus-color,
		shadowColor: $uranus-shadow
	),
	'neptune': (
		planetSize: $neptune-size,
		backgroundColor: $neptune-color,
		shadowColor: $neptune-shadow
	)
);

@each $name, $planet in $planets {
	.planet--#{$name} {
		width: map-get($planet, planetSize);
		height: map-get($planet, planetSize);
		background-color: map-get($planet, backgroundColor);
		box-shadow: inset 0px #{map-get($planet, planetSize) / 5} 0px 0px map-get($planet, shadowColor);
	}
}

.moon {
	width: $moon-size;
	height: $moon-size;
	background-color: $moon-color;
	transform: translate(50%, 50%);
}

// ##################################################################
// ###################### ANIMATION TIME! ###########################
// ##################################################################

@keyframes animate--orbit {
	0% {
		transform: rotateZ(0deg);
	}

	100% {
		transform: rotateZ(-360deg);
	}
}

.orbit {
	animation-name: animate--orbit;
	animation-timing-function: linear;
	animation-iteration-count: infinite;
}
